<?php
/*
 * @author    Ivan Belchev <ivan@imbelchev.com>
 * @copyright Copyright (c) 2022 MIT (see LICENSE.md)
 * @link      https://imbelchev.com
 */

namespace Convert\Blog\Model;


use Convert\Blog\Api\Data\PostInterface;
use Magento\Framework\Model\AbstractModel;
use Magento\Store\Model\StoreManagerInterface;
use Magento\UrlRewrite\Service\V1\Data\UrlRewrite;
use Magento\UrlRewrite\Service\V1\Data\UrlRewriteFactory;

/**
 * Class PostUrlRewriteGenerator
 * @package Convert\Blog\Model
 */
class PostUrlRewriteGenerator
{
    const ENTITY_TYPE = 'blog-post';

    /**
     * @var StoreManagerInterface
     */
    private $storeManager;

    /**
     * @var UrlRewriteFactory
     */
    private $urlRewriteFactory;
    /**
     * @var PostInterface
     */
    private $post;
    /**
     * @var PostUrlGenerator
     */
    private $postUrlGenerator;

    /**
     * @param StoreManagerInterface $storeManager
     * @param UrlRewriteFactory $urlRewriteFactory
     * @param PostUrlGenerator $postUrlGenerator
     */
    public function __construct(
        StoreManagerInterface $storeManager,
        UrlRewriteFactory     $urlRewriteFactory,
        PostUrlGenerator $postUrlGenerator
    )
    {
        $this->storeManager = $storeManager;
        $this->urlRewriteFactory = $urlRewriteFactory;
        $this->postUrlGenerator = $postUrlGenerator;
    }

    /**
     * @param PostInterface $post
     * @return UrlRewrite[]
     */
    public function generate(PostInterface $post): array
    {
        $this->setAsPostProperty($post);
        $urls = [];
        foreach ($this->storeManager->getStores() as $store) {
            $urls[] = $this->createUrlRewrite($store->getStoreId());
        }

        return $urls;
    }

    /**
     * @param int $storeId
     * @param $redirectType
     * @return UrlRewrite
     */
    private function createUrlRewrite(int $storeId, $redirectType = 0): UrlRewrite
    {
        return $this->urlRewriteFactory->create()
            ->setStoreId($storeId)
            ->setEntityType(self::ENTITY_TYPE)
            ->setEntityId($this->post->getId())
            ->setRequestPath(PostUrlGenerator::PREFIX . $this->post->getUrlKey())
            ->setTargetPath($this->postUrlGenerator->getCanonicalUrlPath($this->post))
            ->setIsAutogenerated(1)
            ->setRedirectType($redirectType);
    }

    /**
     * @param PostInterface $post
     * @return void
     */
    private function setAsPostProperty(PostInterface $post): void
    {
        $this->post = $post;
    }
}
